buildscript {
    repositories {
		mavenCentral()
    }

    dependencies {
		classpath 'com.android.tools.build:gradle:0.11.+'
    }
}

allprojects {
	ext {
		shortVersion = '0.0.1'
		isSnapshot = true
		sonatypeCredentialsAvailable = project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')
		isReleaseVersion = !isSnapshot
		signingRequired = isReleaseVersion
		sonatypeSnapshotUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
		sonatypeStagingUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
	}

	group = 'eu.geekplace.iesp'
	version = shortVersion
	if (isSnapshot) {
		version += '-SNAPSHOT'
	}
}

subprojects {
	apply plugin: 'maven'
	apply plugin: 'signing'

	uploadArchives {
		repositories {
			mavenDeployer {
				if (signingRequired) {
					beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
				}
				repository(url: project.sonatypeStagingUrl) {
					if (sonatypeCredentialsAvailable) {
						authentication(userName: sonatypeUsername, password: sonatypePassword)
					}
				}
				snapshotRepository(url: project.sonatypeSnapshotUrl) {
					if (sonatypeCredentialsAvailable) {
						authentication(userName: sonatypeUsername, password: sonatypePassword)
					}
				}

				pom.project {
					name 'IESP'
					description 'Android library to import/export SharedPreferences'
					url 'http://iesp.geekplace.eu'

					scm {
						url 'https://github.com/flowdalic/iesp'
						connection 'scm:git@github.com:flowdalic/iesp.git'
						developerConnection 'scm:git@github.com:flowdalic/iesp.git'
					}

					licenses {
						license {
							name 'The MIT license (MIT)'
							url 'http://opensource.org/licenses/MIT'
							distribution 'repo'
						}
					}

					developers {
						developer {
							id 'flow'
							name 'Florian Schmaus'
						}
					}
				}
			}
		}
	}

	signing {
		required { signingRequired }
		sign configurations.archives
	}
}

gradle.taskGraph.whenReady { taskGraph ->
	if (signingRequired
		&& taskGraph.allTasks.any { it instanceof Sign }) {
		// Use Java 6's console to read from the console (no good for a CI environment)
		Console console = System.console()
		console.printf '\n\nWe have to sign some things in this build.\n\nPlease enter your signing details.\n\n'
		def password = console.readPassword('GnuPG Private Key Password: ')

		allprojects { ext.'signing.password' = password }

		console.printf '\nThanks.\n\n'
	}
}
